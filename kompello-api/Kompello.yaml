openapi: 3.0.3
info:
  title: Kompello Server API
  version: 1.0.0
  description: Kompello Server API Documentation
  contact:
    name: 'Github: Kompello'
    url: https://github.com/KBurgTech/kompello-server
  license:
    name: 'Licence: MIT'
    url: https://github.com/KBurgTech/kompello-server/blob/main/LICENSE
paths:
  /api/auth/refresh/:
    post:
      operationId: auth_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/register/:
    post:
      operationId: register
      description: Register a new user and create a session
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: ''
  /api/auth/social/:
    post:
      operationId: social_auth
      description: Log a user in and create a session
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialAuthLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialAuthLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialAuthLogin'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: ''
  /api/auth/standard/:
    post:
      operationId: password_auth
      description: Log a user in and create a session
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPasswordLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserPasswordLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserPasswordLogin'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: ''
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/tenants/:
    get:
      operationId: tenants_list
      description: A viewset that serializes Users
      tags:
      - tenants
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tenant'
          description: ''
    post:
      operationId: tenants_create
      description: A viewset that serializes Users
      tags:
      - tenants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tenant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tenant'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: ''
  /api/tenants/{uuid}/:
    get:
      operationId: tenants_retrieve
      description: A viewset that serializes Users
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - tenants
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: ''
    put:
      operationId: tenants_update
      description: A viewset that serializes Users
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - tenants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tenant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tenant'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: ''
    patch:
      operationId: tenants_partial_update
      description: A viewset that serializes Users
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - tenants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTenant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTenant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTenant'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: ''
    delete:
      operationId: tenants_destroy
      description: A viewset that serializes Users
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - tenants
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/tenants/{uuid}/add_users/:
    post:
      operationId: tenant_add_users
      description: Add users to a tenant
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - tenants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUuidList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUuidList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUuidList'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleResponse'
          description: ''
  /api/tenants/{uuid}/remove_users/:
    post:
      operationId: tenant_remove_users
      description: Remove users from a tenant
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - tenants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUuidList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUuidList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUuidList'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleResponse'
          description: ''
  /api/tenants/{uuid}/users/:
    get:
      operationId: tenant_users
      description: Get all users in the tenant
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - tenants
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/users/:
    get:
      operationId: users_list
      description: A viewset that serializes Users
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      description: A viewset that serializes Users
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{uuid}/:
    get:
      operationId: users_retrieve
      description: A viewset that serializes Users
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      description: A viewset that serializes Users
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      description: A viewset that serializes Users
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      description: A viewset that serializes Users
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/{uuid}/permissions/:
    get:
      operationId: permissions
      description: Get all permissions for the user
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionList'
          description: ''
  /api/users/{uuid}/set_password/:
    post:
      operationId: users_set_password
      description: Change a users password
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Password'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Password'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Password'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleResponse'
          description: ''
  /api/users/me/:
    get:
      operationId: users_me
      description: Get currently logged in user
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        exprires_at:
          type: integer
        user:
          $ref: '#/components/schemas/UserInformation'
      required:
      - access_token
      - exprires_at
      - refresh_token
      - user
    Password:
      type: object
      properties:
        password:
          type: string
      required:
      - password
    PatchedTenant:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        slug:
          type: string
          maxLength: 255
        name:
          type: string
          maxLength: 255
    PatchedUser:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          title: Vorname
          maxLength: 150
        last_name:
          type: string
          title: Nachname
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          title: Passwort
          maxLength: 128
    PermissionList:
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
      required:
      - permissions
    Register:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        password_repeated:
          type: string
        first_name:
          type: string
        last_name:
          type: string
      required:
      - email
      - first_name
      - last_name
      - password
      - password_repeated
    SimpleResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    SocialAuthLogin:
      type: object
      properties:
        provider:
          type: string
        access_token:
          type: string
        id_token:
          type: string
      required:
      - access_token
      - id_token
      - provider
    Tenant:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        slug:
          type: string
          maxLength: 255
        name:
          type: string
          maxLength: 255
      required:
      - name
      - slug
      - uuid
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          title: Vorname
          maxLength: 150
        last_name:
          type: string
          title: Nachname
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          title: Passwort
          maxLength: 128
      required:
      - email
      - password
      - uuid
    UserInformation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          title: Vorname
          maxLength: 150
        last_name:
          type: string
          title: Nachname
          maxLength: 150
      required:
      - email
      - uuid
    UserPasswordLogin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    UserUuidList:
      type: object
      properties:
        uuids:
          type: array
          items:
            type: string
            format: uuid
      required:
      - uuids
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
